library(ggplot2)
library(ggplot2)
library(ggplot2)
fig(12,8)
fig(12,8)
library(tidyverse) # metapackage of all tidyverse packages
library(ggplot2)
library(dplyr)
library(reshape2) # Melt
library(plyr)
library(scales) # visualisation
library(corrplot) # visualisation
library(GGally) # visualisation
library(ggthemes) # visualisation
library(ggalt) # encircle
library(maps) #maps
library(treemap)
library(ggdendro) # Dendogram
# Interactivity
library(crosstalk)
library(plotly)
#Date
library(scales)
library(zoo)
library(lubridate)
fig<-function(x,y){
options(repr.plot.width = x, repr.plot.height = y)
}
fig(12,8)
ggplot(titanic, aes(x=Age, y=Fare)) +
geom_point(aes(color=Sex)) +
labs(y="Fare",
x="Age",
title="Titanic - Age vs Fare against Gender ")+
theme_gray()+ # Default theme
theme(plot.title = element_text(size=22),axis.text.x= element_text(size=15),
axis.text.y= element_text(size=15), axis.title=element_text(size=18))
library(tidyverse)
View(gapminder)
gapminder
library(grapminder)
library(gapminder)
library("gapminder")
install.packages("gapminder")
View(gapminder)
library(gapminder)
View(gapminder)
gapminder %>%
filter(continent %in% c("Africa", "Europe"))
filter(continent %in% c("Africa", "Europe"))+
View(gapminder)
library(tidyverse)
View(gapminder)
gapminder %>%
filter(continent %in% c("Africa","Europe")) %>%
filter(gdpPercap < 30000) %>%
ggplot(aes(x=gdpPercap,))
gapminder %>%
filter(continent %in% c("Africa","Europe")) %>%
filter(gdpPercap < 30000) %>%
ggplot(aes(x=gdpPercap,))
gapminder %>%
gapminder %>%
filter(continent %in% c("Africa","Europe")) %>%
filter(gdpPercap < 30000) %>%
ggplot(aes(x=gdpPercap,
y=lifeExp,
size=pop,
color=year))+
geom_point()+
facet_wrap(~continent)+
labs(title = "Life expectancy explained byGDP",
x="GDP per capita",
y="Life expectancy")
gapminder %>%
+ filter(continent %in% c("Africa","Europe")) %>%
+ filter(gdpPercap < 30000) %>%
+ ggplot(aes(x=gdpPercap,
+            y=lifeExp,
+            size=pop,
+            color=year))+
+     geom_point()+
+     facet_wrap(~continent)+
+     labs(title = "Life expectancy explained byGDP",
+          x="GDP per capita",
+          y="Life expectancy")
View(fig)
View(fig)
View(fig)
View(fig)
View(fig)
setwd("M:/Documents/_phd/_data_analysis_and_documentation/Paper5_Tryptophan_producer_scale-down/Tryptophan_producer_strain_analysis/data_processing/R")
library("DESeq2")
library(dplyr)
library(EnhancedVolcano)
metadata<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
countdata<-read.csv(file = "../../data/RNAseq_data/FeatureCounts.tsv", sep= "\t", row.names = 1,check.names = FALSE)
View(metadata)
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ condition+strain_ID)
dds <- DESeq(dds)
library("DESeq2")
library(dplyr)
library(EnhancedVolcano)
metadata<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
countdata<-read.csv(file = "../../data/RNAseq_data/FeatureCounts.tsv", sep= "\t", row.names = 1,check.names = FALSE)
View(metadata)
library("DESeq2")
library(dplyr)
library(EnhancedVolcano)
metadata<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
countdata<-read.csv(file = "../../data/RNAseq_data/FeatureCounts.tsv", sep= "\t", row.names = 1,check.names = FALSE)
View(metadata)
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ strain_ID + process_condition)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ strain_ID + process_condition + strain_ID:process_condition)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ process_condition + strain_ID + process_condition:strain_ID)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ process_condition + strain_ID)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, contrast=c("strain_ID","SDT714","HMP3071"))
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, name = "strain_ID_SDT714_vs_HMP3071")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
# Scale-down vs control
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ condition)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, name="condition_SDT714_control_vs_HMP3071_control")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ condition)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, name="condition_HMP3071_scale.down_vs_HMP3071_control")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, contrast=c("condition","HMP3071_scale.down","HMP3071_control"))
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, contrast=c("condition","SDT714_scale.down","SDT714_control"))
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
library("DESeq2")
library(dplyr)
library(EnhancedVolcano)
metadata<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
countdata<-read.csv(file = "../../data/RNAseq_data/FeatureCounts.tsv", sep= "\t", row.names = 1,check.names = FALSE)
dds <- DESeqDataSetFromMatrix(countData = countdata,
colData = metadata,
design= ~ condition)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients
res <- results(dds, name="condition_HMP3071_scale.down_vs_HMP3071_control")
write.csv(res,"../../data/RNAseq_data/DESeq_res_HMP3071_sd_vs_ctrl.csv")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, contrast=c("condition","SDT714_scale.down","SDT714_control"))
write.csv(res,"../../data/RNAseq_data/DESeq_res_SDT714_sd_vs_ctrl.csv")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, contrast=c("condition","SDT714_control","HMP3071_control"))
write.csv(res,"../../data/RNAseq_data/DESeq_res_SDT714_ctrl_vs_HMP3071_ctrl.csv")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
res <- results(dds, contrast=c("condition","SDT714_scale.down","HMP3071_scale.down"))
write.csv(res,"../../data/RNAseq_data/DESeq_res_SDT714_sd_vs_HMP3071_sd.csv")
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
pCutoff = 10e-5,
FCcutoff = 1.0
)
library(PCAtools)
library(dplyr)
# PCA of A matrix
logtpmData<-read.csv(file="../../data/RNAseq_data/log_tpm.csv",row.names = 1, check.names = FALSE)
MetaData<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
logtpmData<- logtpmData %>%mutate_all(as.numeric)
logtpmData <- t(scale(t(logtpmData)))
p <- pca(logtpmData,metadata = MetaData, removeVar = 0.1)
library(PCAtools)
library(dplyr)
# PCA of A matrix
logtpmData<-read.csv(file="../../data/RNAseq_data/log_tpm.csv",row.names = 1, check.names = FALSE)
MetaData<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
logtpmData<- logtpmData %>%mutate_all(as.numeric)
logtpmData <- t(scale(t(logtpmData)))
p <- pca(logtpmData,metadata = MetaData, removeVar = 0.1)
View(MetaData)
biplot(p,
x = 'PC1',
y = 'PC2',
ntopLoadings = 5,fillBoxedLoadings = "white",widthLoadingsArrows = 1.0,drawConnectorsLoadings = TRUE,
sizeLoadingsNames = 5.0,
borderWidth = 1.0,gridlines.minor = FALSE,gridlines.major = FALSE,vlineWidth = 1,hlineWidth = 1,
colby = "process_condition",
shape = "strain_ID",
hline = 0,
vline = 0,
legendPosition = "right",borderColour = "black",
lab = NULL,
showLoadings = TRUE)
View(MetaData)
library(PCAtools)
library(dplyr)
# PCA of A matrix
logtpmData<-read.csv(file="../../data/RNAseq_data/log_tpm.csv",row.names = 1, check.names = FALSE)
MetaData<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
View(MetaData)
library(PCAtools)
library(dplyr)
# PCA of A matrix
logtpmData<-read.csv(file="../../data/RNAseq_data/log_tpm.csv",row.names = 1, check.names = FALSE)
MetaData<-read.csv(file = "../../data/RNAseq_data/metadata.tsv", sep= "\t", row.names = 1,check.names = FALSE)
logtpmData<- logtpmData %>%mutate_all(as.numeric)
logtpmData <- t(scale(t(logtpmData)))
p <- pca(logtpmData,metadata = MetaData, removeVar = 0.1)
biplot(p,
x = 'PC1',
y = 'PC2',
ntopLoadings = 5,fillBoxedLoadings = "white",widthLoadingsArrows = 1.0,drawConnectorsLoadings = TRUE,
sizeLoadingsNames = 5.0,
borderWidth = 1.0,gridlines.minor = FALSE,gridlines.major = FALSE,vlineWidth = 1,hlineWidth = 1,
colby = "process_condition",
shape = "experiment_run",
hline = 0,
vline = 0,
legendPosition = "right",borderColour = "black",
lab = NULL,
showLoadings = TRUE)
biplot(p,
x = 'PC2',
y = 'PC3',
ntopLoadings = 5,fillBoxedLoadings = "white",widthLoadingsArrows = 1.0,drawConnectorsLoadings = TRUE,
sizeLoadingsNames = 5.0,
borderWidth = 1.0,gridlines.minor = FALSE,gridlines.major = FALSE,vlineWidth = 1,hlineWidth = 1,
colby = "process_condition",
shape = "experiment_run",
hline = 0,
vline = 0,
legendPosition = "right",borderColour = "black",
lab = NULL,
showLoadings = TRUE)
write.csv(p["loadings"],"../../data/RNAseq_data/log_tpm_PCA_loadings.csv")
write.csv(p["rotated"],"../../data/RNAseq_data/log_tpm_PCA_rotated.csv")
write.csv(p["metadata"],"../../data/RNAseq_data/log_tpm_PCA_metadata.csv")
write.csv(p["variance"],"../../data/RNAseq_data/log_tpm_PCA_variances.csv")
elbow <- findElbowPoint(p$variance)
elbow
pairsplot(p,components = c("PC1","PC2","PC3","PC4"))
